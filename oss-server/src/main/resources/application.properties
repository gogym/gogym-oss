# ----------------------------------------------------------------------------------------------------------------#
#                                               oss-server 基础配置                                                                                                                          #
# ----------------------------------------------------------------------------------------------------------------#
spring.profiles.active=dev
spring.application.name=oss-api
server.port=1703
#spring boot 项目中，增加如下配置指定tomcat的基目录，
#否则spring boot内嵌的tomcat容器会创建一个临时目录，
#但是此目录有一个定期清除策略，会影响web容器资源的使用
server.tomcat.basedir=./deployer/tomcat
#编码
spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true   
server.tomcat.uri-encoding=UTF-8

#开启认证
security.basic.enabled=false

# ----------------------------------------------------------------------------------------------------------------#
#                                               日志配置                                                                                                                          #
# ----------------------------------------------------------------------------------------------------------------#
#log4j2指定配置文件路径
logging.config=classpath:xml/log4j2.xml


# ----------------------------------------------------------------------------------------------------------------#
#                                               远程调用配置                                                                                                                          #
# ----------------------------------------------------------------------------------------------------------------#
#feign.hystrix.enabled=false
# hystrix的超时时间,10s
#hystrix.command.default.execution.timeout.enabled=false
#hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=60000
# 请求连接的超时时间
#ribbon.ConnectTimeout=20000
# 请求处理的超时时间
#ribbon.ReadTimeout=60000

# ----------------------------------------------------------------------------------------------------------------#
#                                               服务发现配置                                                                                                                          #
# ----------------------------------------------------------------------------------------------------------------#
#租期更新时间间隔（默认30秒
eureka.instance.leaseRenewalIntervalInSeconds=20
#租期到期时间（默认90秒
eureka.instance.leaseExpirationDurationInSeconds=40

eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.cloud.client.ipAddress}:${server.port}


# ----------------------------------------------------------------------------------------------------------------#
#                                               上传配置                                                                                                                          #
# ----------------------------------------------------------------------------------------------------------------#
#fileupload start  事实证明此种方法没有什么卵用
#默认支持文件上传.  
spring.http.multipart.enabled=true
#支持文件写入磁盘.  
#multipart.file-size-threshold=2048
# 上传文件的临时目录  
#spring.http.multipart.location=
#指定文件大小最大值，默认1MB，设置50M
spring.http.multipart.maxFileSize=104857600
# 指定每次请求的最大值，默认为10MB 设置100M
spring.http.multipart.maxRequestSize=209715200
#fileupload end  

# ----------------------------------------------------------------------------------------------------------------#
#                                               数据库配置                                                                                                                          #
# ----------------------------------------------------------------------------------------------------------------#
#spring.datasource.driverClassName=com.mysql.jdbc.Driver
#spring.datasource.url=jdbc:mysql://192.168.167.114:3306/gogym_oss?useUnicode=true&useSSL=false&allowMultiQueries=true&useAffectedRows=true
#spring.datasource.username=root
#spring.datasource.password=123456



# Hikari will use the above plus the following to setup connection pooling
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
# 等待连接池分配连接的最大时长（毫秒），超过这个时长还没可用的连接则发生SQLException， 默认:30秒
spring.datasource.hikari.connection-timeout=30000
# 最小连接数
spring.datasource.hikari.minimum-idle=5
# 最大连接数
spring.datasource.hikari.maximum-pool-size=15
# 自动提交
spring.datasource.hikari.auto-commit=true
# 一个连接idle状态的最大时长（毫秒），超时则被释放（retired），默认:10分钟
spring.datasource.hikari.idle-timeout=600000
# 连接池名字
spring.datasource.hikari.pool-name=DatebookHikariCP
# 一个连接的生命时长（毫秒），超时而且没被使用则被释放（retired），默认:30分钟 1800000ms，建议设置比数据库超时时长少60秒，参考MySQL wait_timeout参数（show variables like '%timeout%';） -->  
spring.datasource.hikari.max-lifetime=28740000
spring.datasource.hikari.connection-test-query=SELECT 1

# ----------------------------------------------------------------------------------------------------------------#
#                                               beelsql配置                                                                                                                          #
# ----------------------------------------------------------------------------------------------------------------#
beetlsql.enabled=true
beetl.enabled=false
#默认配置
beetlsql.daoSuffix=Dao
beetlsql.basePackage=pres.gogym.dfs
beetlsql.sqlPath=/sql

#oss数据源配置
beetlsql.ds.ossDatasource.basePackage=pres.gogym.dfs.module.dao
beetlsql.ds.ossDatasource.dbStyle=org.beetl.sql.core.db.MySqlStyle

#多数据源指定
beetlsql.mutiple.datasource=ossDatasource



# ----------------------------------------------------------------------------------------------------------------#
#                                              redis配置                                                                                                                          #
# ----------------------------------------------------------------------------------------------------------------#

#节点，多个节点用,分隔：127.0.0.1:6379,127.0.0.1:6378,127.0.0.1:6377
#spring.redis.cluster.nodes=127.0.0.1:6379
#spring.redis.cluster.port=6379
#spring.redis.cluster.password=inhand@redis2017
#最大连接数, 默认8个,一些低版本的包是maxActive，如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态为exhausted(耗尽)。
spring.redis.cluster.maxTotal=100
#控制一个pool最多有多少个状态为idle(空闲的)的jedis实例。
spring.redis.cluster.maxIdle=20
#控制一个pool最少有多少个状态为idle(空闲的)的jedis实例。
spring.redis.cluster.minIdle=2
#等待可用连接的最大时间，单位毫秒，默认值为-1，表示永不超时。如果超过等待时间，则直接抛出JedisConnectionException；
spring.redis.cluster.maxWait=10000
#在borrow一个jedis实例时，是否提前进行validate操作；如果为true，则得到的jedis实例均是可用的
spring.redis.cluster.testOnBorrow=true
#jedis调用returnObject方法时，是否进行有效检查
spring.redis.cluster.testOnReturn=false
#读取超时
spring.redis.cluster.timeout=5000
#连接超时
spring.redis.cluster.connectionTimeout=5000
#最大尝试次数
spring.redis.cluster.maxAttempts=3
